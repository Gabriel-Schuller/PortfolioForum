{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schul\\\\OneDrive\\\\Desktop\\\\PROIECTPORTOFOLIU\\\\reactforum\\\\src\\\\components\\\\layout\\\\NavBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport UserBox from \"./UserBox\";\nimport { useContext, useState } from \"react\";\nimport RegisterContex from \"../contexts/registery-context\";\nimport LogBar from \"./LogBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Products', 'Pricing', 'Blog'];\n\nconst NavBar = () => {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const registerCtx = useContext(RegisterContex);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = event => {\n    // console.log(event.currentTarget.innerText);\n    setAnchorElNav(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: \"CodeForm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"account of current user\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            sx: {\n              display: {\n                xs: 'block',\n                md: 'none'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleCloseNavMenu,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: \"CodeForm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseNavMenu,\n            sx: {\n              my: 2,\n              color: 'white',\n              display: 'block'\n            },\n            children: page\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), registerCtx.logStatus ? /*#__PURE__*/_jsxDEV(UserBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(LogBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"LVqKaFhK8uhaTgjxO4vHumqDHSo=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/schul/OneDrive/Desktop/PROIECTPORTOFOLIU/reactforum/src/components/layout/NavBar.js"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Button","MenuItem","UserBox","useContext","useState","RegisterContex","LogBar","pages","NavBar","anchorElNav","setAnchorElNav","registerCtx","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","page","my","color","logStatus"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport UserBox from \"./UserBox\";\r\nimport {useContext, useState} from \"react\";\r\nimport RegisterContex from \"../contexts/registery-context\";\r\nimport LogBar from \"./LogBar\";\r\n\r\n\r\nconst pages = ['Products', 'Pricing', 'Blog'];\r\n\r\n\r\nconst NavBar = () => {\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const registerCtx = useContext(RegisterContex);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n\r\n\r\n    const handleCloseNavMenu = (event) => {\r\n        // console.log(event.currentTarget.innerText);\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{mr: 2, display: {xs: 'none', md: 'flex'}}}\r\n                    >\r\n                        CodeForm\r\n                    </Typography>\r\n\r\n                    <Box sx={{flexGrow: 1, display: {xs: 'flex', md: 'none'}}}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleOpenNavMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElNav}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={Boolean(anchorElNav)}\r\n                            onClose={handleCloseNavMenu}\r\n                            sx={{\r\n                                display: {xs: 'block', md: 'none'},\r\n                            }}\r\n                        >\r\n                            {pages.map((page) => (\r\n                                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                                    <Typography textAlign=\"center\">{page}</Typography>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{flexGrow: 1, display: {xs: 'flex', md: 'none'}}}\r\n                    >\r\n                        CodeForm\r\n                    </Typography>\r\n                    <Box sx={{flexGrow: 1, display: {xs: 'none', md: 'flex'}}}>\r\n                        {pages.map((page) => (\r\n                            <Button\r\n                                key={page}\r\n                                onClick={handleCloseNavMenu}\r\n                                sx={{my: 2, color: 'white', display: 'block'}}\r\n                            >\r\n                                {page}\r\n                            </Button>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    {registerCtx.logStatus ? <UserBox/> : <LogBar/>}\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}